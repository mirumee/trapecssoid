@import 'mathsass/dist/math';

@mixin trapecssoid(
  $border: left,
  $peak: top,
  $angle: 0,
  $color: transparent,
  $color-hover: $color,
  $child-selector: div,
  $gap: 50px,
  $second: false,
  $child-background: true,
  $inset: false
) {
  $border-to-pseudoelement: before;
  @if $second {
    $border-to-pseudoelement: after;
  }
  $border-inverse-map: (
    top: bottom,
    right: left,
    bottom: top,
    left: right
  );
  @if not $inset {
    margin-#{$border}: -$gap;
    padding-#{$border}: $gap;
  }
  display: block;
  overflow: hidden;

  > #{$child-selector} {
    @if $child-background and not $inset {
      background: $color;
    }
    display: block;
    position: relative;

    @if $color-hover != $color {
      &:hover, &:focus {
        @if not $inset {
          background: $color-hover;
        }

        &:#{$border-to-pseudoelement} {
          border-#{map_get($border-inverse-map, $border)}-color: $color-hover;
        }
      }
    }

    &:#{$border-to-pseudoelement} {
      content: '';
      position: absolute;
    }

    $factor: 100px;
    @if $border == top or $border == bottom {
      $factor: $factor * 15;
    }
    $border-transparent-width: $angle*$factor;
    $border-visible-width: round($border-transparent-width/cot($angle*1deg));

    @if $inset {
      &:#{$border-to-pseudoelement} {
        border-#{$border}: $border-visible-width solid $color;
        border-#{$peak}: $border-transparent-width solid transparent;
        #{$border}: 0;
        #{$peak}: 0;
      }
    } @else {
      &:#{$border-to-pseudoelement} {
        border-#{map_get($border-inverse-map, $border)}: $border-visible-width solid $color;
        border-#{map_get($border-inverse-map, $peak)}: $border-transparent-width solid transparent;
        #{$border}: -$border-visible-width;
        #{map_get($border-inverse-map, $peak)}: 0;
      }
    }
  }
}
