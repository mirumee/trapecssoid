@mixin trapecssoid(
  $border: top,
  $slope: asc,
  $angle: 0,
  $color: transparent,
  $color-hover: $color,
  $child-selector: div,
  $gap: 50px,
  $second: false,
  $child-background: true
) {
  $border-to-pseudoelement: before;
  @if $second {
    $border-to-pseudoelement: after;
  }
  $border-inverse-map: (
    top: bottom,
    right: left,
    bottom: top,
    left: right
  );
  $slope-to-border-map: (
    asc: (
      top: left,
      right: bottom,
      bottom: right,
      left: top
    ),
    desc: (
      top: right,
      right: top,
      bottom: left,
      left: bottom
    )
  );
  margin-#{$border}: -$gap;
  overflow: hidden;
  padding-#{$border}: $gap;

  > #{$child-selector} {
    @if $child-background {
      background: $color;
    }
    display: block;
    position: relative;

    &:hover {
      background: $color-hover;

      &:#{$border-to-pseudoelement} {
        border-#{map_get($border-inverse-map, $border)}-color: $color-hover;
      }
    }

    &:#{$border-to-pseudoelement} {
      content: '';
      position: absolute;
    }

    $factor: 100px;
    @if $border == top or $border == bottom {
      $factor: $factor * 15;
    }
    $border-transparent-width: $angle*$factor;
    $border-visible-width: round($border-transparent-width/cot($angle*1deg));

    &:#{$border-to-pseudoelement} {
      border-#{map_get($border-inverse-map, $border)}: $border-visible-width solid $color;
      border-#{map_get(map_get($slope-to-border-map, $slope), $border)}: $border-transparent-width solid transparent;
      #{$border}: -$border-visible-width;
      #{map_get(map_get($slope-to-border-map, $slope), $border)}: 0;
    }
  }
}
